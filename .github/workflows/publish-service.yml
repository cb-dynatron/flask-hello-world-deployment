name: ci

on:
  push:
    paths:
      - service/**
      - .github/workflows/publish-service.yml

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-2

defaults:
  run:
    working-directory: ./service

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::339713176830:role/github-actions
          role-session-name: ${{ github.event.repository.name }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create Repository
        shell: bash
        run: |
          aws ecr create-repository \
            --repository-name flask-hello-world \
            || echo "Already created"
          aws ecr set-repository-policy --repository-name flask-hello-world \
            --policy-text '{ "Version": "2012-10-17", "Statement": [ { "Sid": "ReadonlyAccess", "Effect": "Allow", "Principal": { "AWS": "arn:aws:iam::339713176830:root" }, "Action": [ "ecr:BatchCheckLayerAvailability", "ecr:BatchGetImage", "ecr:DescribeImageScanFindings", "ecr:DescribeImages", "ecr:DescribeRepositories", "ecr:GetAuthorizationToken", "ecr:GetDownloadUrlForLayer", "ecr:GetRepositoryPolicy", "ecr:ListImages" ] } ] }'

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./service
          platforms: linux/amd64
          push: true
          tags: 339713176830.dkr.ecr.us-east-2.amazonaws.com/flask-hello-world:latest
